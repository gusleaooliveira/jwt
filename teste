require("dotenv-safe").config();
const jwt = require("jsonwebtoken");
const express = require("express");
const bodyParser = require("body-parser");
const cookieParser = require("cookie-parser");

let app = express();

app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json());
app.use(cookieParser());

function verifyJWT(req, res, next){
	let token = req.headers["x-access-token"];
	if(!token)return res.status(401).json({auth: false, message: "Nenhum token fornecido"});

	jwt.verify(token, process.env.SECRET, function(err, decoded){
		if(err)return res.status(500).json({auth: false, message: "Falha ao autenticar token"});

		req.userId = decoded.id;
		next();
	});

}

app.get("/", (req, res, next) => {
	res.send({message: "Ok / estÃ¡ ok"})
});

app.get("/clientes", verifyJWT, (req, res, next) => {
	res.json([{id: 1, nome: "Gustavo"}])
});

app.post("/clientes/login", (req, res, next) => {
	if(req.body.usuario == "gustavo" && req.body.senha == "123"){
		let id = 1;
		let token = jwt.sign({id}, process.env.SECRET, { expiresIn: 300 });
		return res.json({auth: true, token: token});
	}
	res.status(500).json({message: "Login Invalido"});
});

app.post("/clientes/logout",  (req, res, next) => {
	res.json({auth: false, token: null});
});

app.listen(process.env.PORT || 5000);
